{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/serzhul/Desktop/Coding/Portfolio/nextjs-course-demo/pages/new-meetup/index.js\";\n// our-domain.com/new-meetup\nimport { useRouter } from \"next/router\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\nimport Spinner from \"../../components/ui/Spinner\";\n\nfunction NewMeetupPage() {\n  const {\n    0: isVisible,\n    1: setIsVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const router = useRouter();\n  useEffect(() => {\n    if (isVisible && message) {\n      router.push(`/?isVisible=${isVisible}?message=${message}`);\n    }\n  }, [isVisible, message]);\n\n  async function addMeetupHandler(enteredMeetupData) {\n    setIsLoading(true);\n    const response = await fetch(\"/api/new-meetup\", {\n      method: \"POST\",\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    await setIsVisible(true);\n    await setMessage(data.message);\n    await setIsLoading(false); // router.push({\n    //   pathname: \"/\",\n    //   query: { isVisible: isVisible, message: message },\n    // });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add Meetup!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        description: \"add the meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n      onAddMeetup: addMeetupHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\nexport default NewMeetupPage;","map":{"version":3,"sources":["/Users/serzhul/Desktop/Coding/Portfolio/nextjs-course-demo/pages/new-meetup/index.js"],"names":["useRouter","Fragment","useState","useEffect","Head","NewMeetupForm","Spinner","NewMeetupPage","isVisible","setIsVisible","isLoading","setIsLoading","message","setMessage","router","push","addMeetupHandler","enteredMeetupData","response","fetch","method","body","JSON","stringify","headers","data","json"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,OAAP,MAAoB,6BAApB;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMY,MAAM,GAAGd,SAAS,EAAxB;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,SAAS,IAAII,OAAjB,EAA0B;AACxBE,MAAAA,MAAM,CAACC,IAAP,CAAa,eAAcP,SAAU,YAAWI,OAAQ,EAAxD;AACD;AACF,GAJQ,EAIN,CAACJ,SAAD,EAAYI,OAAZ,CAJM,CAAT;;AAMA,iBAAeI,gBAAf,CAAgCC,iBAAhC,EAAmD;AACjDN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,iBAAf,CAFwC;AAG9CO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHqC,KAApB,CAA5B;AAQA,UAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AAEA,UAAMjB,YAAY,CAAC,IAAD,CAAlB;AACA,UAAMI,UAAU,CAACY,IAAI,CAACb,OAAN,CAAhB;AACA,UAAMD,YAAY,CAAC,KAAD,CAAlB,CAdiD,CAgBjD;AACA;AACA;AACA;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,eACGD,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADhB,eAEE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,WAAW,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,aAAD;AAAe,MAAA,WAAW,EAAEM;AAA5B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAED,eAAeT,aAAf","sourcesContent":["// our-domain.com/new-meetup\nimport { useRouter } from \"next/router\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport Head from \"next/head\";\n\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\nimport Spinner from \"../../components/ui/Spinner\";\n\nfunction NewMeetupPage() {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const router = useRouter();\n\n  useEffect(() => {\n    if (isVisible && message) {\n      router.push(`/?isVisible=${isVisible}?message=${message}`);\n    }\n  }, [isVisible, message]);\n\n  async function addMeetupHandler(enteredMeetupData) {\n    setIsLoading(true);\n    const response = await fetch(\"/api/new-meetup\", {\n      method: \"POST\",\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const data = await response.json();\n\n    await setIsVisible(true);\n    await setMessage(data.message);\n    await setIsLoading(false);\n\n    // router.push({\n    //   pathname: \"/\",\n    //   query: { isVisible: isVisible, message: message },\n    // });\n  }\n\n  return (\n    <Fragment>\n      {isLoading && <Spinner />}\n      <Head>\n        <title>Add Meetup!</title>\n        <meta name=\"description\" description=\"add the meetup\"></meta>\n      </Head>\n\n      <NewMeetupForm onAddMeetup={addMeetupHandler} />\n    </Fragment>\n  );\n}\n\nexport default NewMeetupPage;\n"]},"metadata":{},"sourceType":"module"}