{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// our-domain.com/new-meetup\nimport { useRouter } from \"next/router\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\nimport Spinner from \"../../components/ui/Spinner\";\n\nfunction NewMeetupPage() {\n  const {\n    0: isVisible,\n    1: setIsVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const router = useRouter();\n  useEffect(() => {\n    if (isVisible && message) {\n      router.replace({\n        pathname: \"/\",\n        query: {\n          isVisible: isVisible,\n          message: message\n        }\n      });\n    }\n  }, [isVisible, message]);\n\n  async function addMeetupHandler(enteredMeetupData) {\n    setIsLoading(true);\n    const response = await fetch(\"/api/new-meetup\", {\n      method: \"POST\",\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    await setIsVisible(true);\n    await setMessage(data.message);\n    await setIsLoading(false); // router.push({\n    //   pathname: \"/\",\n    //   query: { isVisible: isVisible, message: message },\n    // });\n  }\n\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsx(Spinner, {}), /*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Add Meetup!\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        description: \"add the meetup\"\n      })]\n    }), /*#__PURE__*/_jsx(NewMeetupForm, {\n      onAddMeetup: addMeetupHandler\n    })]\n  });\n}\n\nexport default NewMeetupPage;","map":null,"metadata":{},"sourceType":"module"}